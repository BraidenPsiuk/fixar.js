var m=Object.defineProperty;var E=(i,s,t)=>s in i?m(i,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[s]=t;var c=(i,s,t)=>(E(i,typeof s!="symbol"?s+"":s,t),t);(function(i,s){typeof exports=="object"&&typeof module!="undefined"?s(exports):typeof define=="function"&&define.amd?define(["exports"],s):(i=typeof globalThis!="undefined"?globalThis:i||self,s(i.FIXAR={}))})(this,function(i){"use strict";const s={wrapper:{width:"100%",height:"100%",display:"flex",alignItems:"center",justifyContent:"center"},container:{display:"block",width:"100%",height:"100%",backgroundColor:"#FFF"}},t={},h={THREE:"Object3D",PIXI:"ProjectionSystem",PHASER3:"Game",BABYLON:"PhysicsImpostor"},p=(...d)=>{for(const e of d){let r=!1;for(const[n,o]of Object.entries(h))e[o]&&(r=!0,t[n]?console.warn("Library already provided, it has been ignored"):(t[n]=e,console.log(`%cSuccessfully loaded the ${n} library!`,"color:green")));r||console.warn("Library unsupported")}};class u{constructor({ar:e=16/9,renderingLibrary:r="THREE",quality:n=1,wrapperColor:o="#000000",camera:_=null,renderer:f=null}={}){c(this,"registerComponents",(e,r)=>{this.camera=e,this.renderer=r});c(this,"resize",()=>{if(this._camera===null||this._renderer===null)throw new Error("(TODO FIX THIS ERROR MESSAGE) Both Camera and Renderer must be available first");console.log("run");const e=this._wrapper.children[0].width,r=this._wrapper.children[0].height;let n=this._wrapper.clientWidth,o=this._wrapper.clientHeight;n=n>o*this._ar?o*this._ar:n,o=n<=o*this._ar?n/this._ar:o,this._renderer.setPixelRatio(window.devicePixelRatio/this._quality),(e!=n||r!=o)&&(this._camera.aspect=n/o,this._camera.updateProjectionMatrix(),this._renderer.setSize(n,o))});if(r=r.trim().toUpperCase(),!Object.keys(h).includes(r))throw new Error(`Rendering library "${r}" is not supported`);if(Object.keys(t).includes(r))console.log("%cSuccessfully initialized Viewport!","color:green");else throw new Error(`The "${r}" rendering library hasn't been provided to FIXAR. You must first call FIXAR.use(${r}) before attempting to create a viewport using that rendering library.`);this._NEED_TO_RESIZE=!0,this._INITIALIZED=!1,this._ar=e,this._renderingLibrary=r,this._quality=n,this._wrapperColor=o,this.registerComponents(_,f),this._container=document.createElement("div"),this._container.setAttribute("id","fixar-container");for(const[a,l]of Object.entries(s.container))this._container.style[a]=l;this._wrapper=document.createElement("div"),this._wrapper.setAttribute("id","fixar-wrapper");for(const[a,l]of Object.entries(s.wrapper))this._wrapper.style[a]=l;this._wrapper.style.backgroundColor=this._wrapperColor,this._container.appendChild(this._wrapper)}set camera(e){if(e===null)this._camera=null;else switch(this._renderingLibrary){case"THREE":if(e.constructor.name===t.THREE.PerspectiveCamera.name||e.constructor.name===t.THREE.OrthographicCamera.name)this._camera=e;else throw new Error(`Please provide ${t.THREE.PerspectiveCamera.name} or ${t.THREE.OrthographicCamera.name}, you provided ${e.constructor.name}`);break}}get camera(){return this._camera}set renderer(e){if(e===null)this._renderer=null;else switch(this._renderingLibrary){case"THREE":if(e.constructor.name===t.THREE.WebGLRenderer.name)this._renderer=e,this._wrapper.appendChild(this._renderer.domElement);else throw new Error(`Please provide ${t.THREE.WebGLRenderer.name}, you provided ${e.constructor.name}`);break}}get renderer(){return this._renderer}set quality(e){this._quality=e}get quality(){return this._quality}get domElement(){return this._container}}i.Viewport=u,i.use=p,Object.defineProperty(i,"__esModule",{value:!0}),i[Symbol.toStringTag]="Module"});
